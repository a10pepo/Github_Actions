name: Terraform Workflow

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  terraform-fmt:
    name: Terraform Format Check
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Terraform
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    # Run terraform fmt
    - name: Check Terraform formatting
      run: terraform fmt -check -recursive

  terraform-init:
    name: Terraform Init
    runs-on: ubuntu-latest
    needs: terraform-fmt

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    # Set up Terraform
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    # Initialize Terraform
    - name: Terraform Init
      run: terraform init

  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: terraform-init

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    # Set up Terraform
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    # Run Terraform Plan
    - name: Terraform Plan
      id: plan
      run: terraform plan -out=tfplan

    # Check if there are changes
    - name: Check for changes
      id: check_changes
      run: |
        terraform show -json tfplan | jq '.resource_changes | length' > changes.txt
        if [ $(cat changes.txt) -eq 0 ]; then
          echo "no_changes=true" >> $GITHUB_ENV
        else
          echo "no_changes=false" >> $GITHUB_ENV
        fi

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: env.no_changes == 'false'

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    # Set up Terraform
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    # Apply Terraform changes
    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan